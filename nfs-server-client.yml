---
# Play 1: Configure NFS server and exports on nfs_servers.
- name: Configure NFS server
  hosts: nfs_servers
  become: true
  pre_tasks:
    - name: Ensure export directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /srv
        - /home
        - /scratch
  roles:
    - geerlingguy.nfs

# Play 2: Optionally mount the exported shares on nfs_clients.
# The geerlingguy.nfs role does not manage client mounts; we do it here.
- name: Mount NFS exports on clients
  hosts: nfs_clients
  become: true
  vars:
    # Map of mounts to create on clients. Adjust as desired.
    nfs_server_host: "{{ groups['nfs_servers'] | first }}"
    nfs_client_mounts:
      - src: "{{ hostvars[nfs_server_host].ansible_host | default(nfs_server_host) }}:/srv"
        path: /mnt/nfs/srv
        opts: "ro,sync"
      - src: "{{ hostvars[nfs_server_host].ansible_host | default(nfs_server_host) }}:/home"
        path: /mnt/nfs/home
        opts: "rw,sync"
      - src: "{{ hostvars[nfs_server_host].ansible_host | default(nfs_server_host) }}:/scratch"
        path: /mnt/nfs/scratch
        opts: "rw,async"
  tasks:
    - name: Ensure client mount directories exist
      file:
        path: "{{ item.path }}"
        state: directory
        mode: '0755'
      loop: "{{ nfs_client_mounts }}"

    - name: Install NFS client utilities
      package:
        name:
          - nfs-common
          - rpcbind
        state: present
      when: ansible_os_family == 'Debian'

    - name: Install NFS client utilities (RHEL-family)
      package:
        name:
          - nfs-utils
          - rpcbind
        state: present
      when: ansible_os_family in ['RedHat', 'Rocky', 'AlmaLinux', 'OracleLinux', 'Fedora']

    - name: Mount NFS shares (fstab + mounted)
      mount:
        src: "{{ item.src }}"
        path: "{{ item.path }}"
        fstype: nfs
        opts: "{{ item.opts }}"
        state: mounted
      loop: "{{ nfs_client_mounts }}"
